// This is your Prisma schema file.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(uuid())
  address   String       @unique
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  sessions  GameSession[]
}

model GameSession {
  id            String       @id @default(uuid())
  userAddress   String      
  user          User         @relation(fields: [userAddress], references: [address]) // Updated reference to address
  gameType      Int
  startTime     DateTime
  endTime       DateTime?
  completed     Boolean      @default(false)
  score         Int          @default(0)
  guesses       Guess[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Guess {
  id            String       @id @default(uuid())
  sessionId     String
  session       GameSession  @relation(fields: [sessionId], references: [id])
  guessedKOL    KOL          @relation(fields: [guessedKOLId], references: [id])
  guessedKOLId  String
  createdAt     DateTime     @default(now())
}

model KOL {
  id                      String                     @id @default(uuid())
  name                    String
  xHandle                 String                     @unique
  link                    String
  country                 String
  ageRange                String
  xAccountCreation        Int
  xFollowersRange         String
  pfpType                 String
  ecosystem               String[]
  descriptions            String[]
  supportedChains         String[]
  tweets                  String[]                   // New field for tweets
  guesses                 Guess[]
  createdAt               DateTime                   @default(now())
  updatedAt               DateTime                   @updatedAt
}